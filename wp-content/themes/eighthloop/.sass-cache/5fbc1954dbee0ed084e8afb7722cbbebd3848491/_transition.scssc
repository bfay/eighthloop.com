3.2.0.alpha.275 (Bleeding Edge)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@children[o:Sass::Tree::ImportNode
;i;0;	[ :@options{ :@imported_filename"sharedo:Sass::Tree::CommentNode
:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	[ :
@type:silent;@
o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	;"all;i;:identifier;@
;i:
@name" default-transition-property;	[ ;@
:@guarded"!defaulto;;o:Sass::Script::Number;i;i:@denominator_units[ :@original"1s;@
:@numerator_units["s;i;" default-transition-duration;	[ ;@
;"!defaulto;;o:Sass::Script::Bool;F;i;@
;i;" default-transition-function;	[ ;@
;"!defaulto;;o;;F;i;@
;i;"default-transition-delay;	[ ;@
;"!defaulto;;o:Sass::Script::List	;[o;	;"transform;i;;;@
o;	;"transform-origin;i;;;@
;i:@separator:
comma;@
;i;"#transitionable-prefixed-values;	[ ;@
;"!defaulto;
;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	[ ;;;@
o:Sass::Tree::MixinDefNode;i0;"transition-property:
@args[[o:Sass::Script::Variable;"property-1;@
:@underscored_name"property_1o;!	;i&;" default-transition-property;@
;"" default_transition_property[o;!;"property-2;@
;""property_2o;;F;i';@
[o;!;"property-3;@
;""property_3o;;F;i(;@
[o;!;"property-4;@
;""property_4o;;F;i);@
[o;!;"property-5;@
;""property_5o;;F;i*;@
[o;!;"property-6;@
;""property_6o;;F;i+;@
[o;!;"property-7;@
;""property_7o;;F;i,;@
[o;!;"property-8;@
;""property_8o;;F;i-;@
[o;!;"property-9;@
;""property_9o;;F;i.;@
[o;!;"property-10;@
;""property_10o;;F;i/;@
;T;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@linei1:
@type:identifier:@options{ ;	i1:@operator:eq:@operand1o:Sass::Script::Funcall
:@keywords{ ;	i1:
@name"type-of:
@args[o:Sass::Script::Variable	;	i1;"property-1;@	:@underscored_name"property_1;@	;@	0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	i1;"unquote;[o;	;	i1;"property-1;@	;"property_1;@	;	i1;"property-1:@children[ ;@	:@guarded0o;;o:Sass::Script::Funcall
:@keywords{ ;i2;"compact; [o;!	;i2;"property-1;@
;""property_1o;!	;i2;"property-2;@
;""property_2o;!	;i2;"property-3;@
;""property_3o;!	;i2;"property-4;@
;""property_4o;!	;i2;"property-5;@
;""property_5o;!	;i2;"property-6;@
;""property_6o;!	;i2;"property-7;@
;""property_7o;!	;i2;"property-8;@
;""property_8o;!	;i2;"property-9;@
;""property_9o;!	;i2;"property-10;@
;""property_10;@
;i2;"properties;	[ ;@
;0u;#¼[o:Sass::Script::Variable	:
@linei3:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall
:@keywords{ ;i3;"prefixed-for-transition:
@args[o:Sass::Script::String	;"-webkit;i3:
@type:identifier;@o; 	;i3;"properties;@;	"properties;@;i3;[" -webkit-transition-property:@children[ :@prop_syntax:new;@:
@tabsi u;#¸[o:Sass::Script::Variable	:
@linei4:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall
:@keywords{ ;i4;"prefixed-for-transition:
@args[o:Sass::Script::String	;"	-moz;i4:
@type:identifier;@o; 	;i4;"properties;@;	"properties;@;i4;["-moz-transition-property:@children[ :@prop_syntax:new;@:
@tabsi u;#°[o:Sass::Script::Variable	:
@linei5:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall
:@keywords{ ;i5;"prefixed-for-transition:
@args[o:Sass::Script::String	;"-o;i5:
@type:identifier;@o; 	;i5;"properties;@;	"properties;@;i5;["-o-transition-property:@children[ :@prop_syntax:new;@:
@tabsi o:Sass::Tree::PropNode;o;!	;i6;"properties;@
;""properties;i6;["transition-property;	[ :@prop_syntax:new;@
:
@tabsi ;@
o;
;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	[ ;;;@
o;;iH;"transition-duration; [[o;!;"duration-1;@
;""duration_1o;!	;i>;" default-transition-duration;@
;"" default_transition_duration[o;!;"duration-2;@
;""duration_2o;;F;i?;@
[o;!;"duration-3;@
;""duration_3o;;F;i@;@
[o;!;"duration-4;@
;""duration_4o;;F;iA;@
[o;!;"duration-5;@
;""duration_5o;;F;iB;@
[o;!;"duration-6;@
;""duration_6o;;F;iC;@
[o;!;"duration-7;@
;""duration_7o;;F;iD;@
[o;!;"duration-8;@
;""duration_8o;;F;iE;@
[o;!;"duration-9;@
;""duration_9o;;F;iF;@
[o;!;"duration-10;@
;""duration_10o;;F;iG;@
;T;	[u;#Í[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@lineiI:
@type:identifier:@options{ ;	iI:@operator:eq:@operand1o:Sass::Script::Funcall
:@keywords{ ;	iI:
@name"type-of:
@args[o:Sass::Script::Variable	;	iI;"duration-1;@	:@underscored_name"duration_1;@	;@	0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	iI;"unquote;[o;	;	iI;"duration-1;@	;"duration_1;@	;	iI;"duration-1:@children[ ;@	:@guarded0o;;o;$
;%{ ;iJ;"compact; [o;!	;iJ;"duration-1;@
;""duration_1o;!	;iJ;"duration-2;@
;""duration_2o;!	;iJ;"duration-3;@
;""duration_3o;!	;iJ;"duration-4;@
;""duration_4o;!	;iJ;"duration-5;@
;""duration_5o;!	;iJ;"duration-6;@
;""duration_6o;!	;iJ;"duration-7;@
;""duration_7o;!	;iJ;"duration-8;@
;""duration_8o;!	;iJ;"duration-9;@
;""duration_9o;!	;iJ;"duration-10;@
;""duration_10;@
;iJ;"durations;	[ ;@
;0o:Sass::Tree::MixinNode;%{ ;iM;"experimental; [o;	;"transition-duration;iK;;;@
o;!	;iK;"durations;@
;""durationso;	;"	-moz;iL;;;@
o;	;"-webkit;iL;;;@
o;	;"-o;iL;;;@
o:!Sass::Script::UnaryOperation	;iL:@operando;	;"-ms;iL;;;@
:@operator:not;@
o;+	;iL;,o;	;"-khtml;iL;;;@
;-;.;@
o;	;"official;iL;;;@
;	[ ;@
;@
o;
;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	[ ;;;@
o;;i`;"transition-timing-function; [[o;!;"function-1;@
;""function_1o;!	;iV;" default-transition-function;@
;"" default_transition_function[o;!;"function-2;@
;""function_2o;;F;iW;@
[o;!;"function-3;@
;""function_3o;;F;iX;@
[o;!;"function-4;@
;""function_4o;;F;iY;@
[o;!;"function-5;@
;""function_5o;;F;iZ;@
[o;!;"function-6;@
;""function_6o;;F;i[;@
[o;!;"function-7;@
;""function_7o;;F;i\;@
[o;!;"function-8;@
;""function_8o;;F;i];@
[o;!;"function-9;@
;""function_9o;;F;i^;@
[o;!;"function-10;@
;""function_10o;;F;i_;@
;T;	[o;;o;$
;%{ ;ia;"unquote; [o;!	;ia;"function-1;@
;""function_1;@
;ia;"function-1;	[ ;@
;0o;;o;$
;%{ ;ib;"compact; [o;!	;ib;"function-1;@
;""function_1o;!	;ib;"function-2;@
;""function_2o;!	;ib;"function-3;@
;""function_3o;!	;ib;"function-4;@
;""function_4o;!	;ib;"function-5;@
;""function_5o;!	;ib;"function-6;@
;""function_6o;!	;ib;"function-7;@
;""function_7o;!	;ib;"function-8;@
;""function_8o;!	;ib;"function-9;@
;""function_9o;!	;ib;"function-10;@
;""function_10;@
;ib;"functions;	[ ;@
;0o;*;%{ ;ie;"experimental; [o;	;"transition-timing-function;ic;;;@
o;!	;ic;"functions;@
;""functionso;	;"	-moz;id;;;@
o;	;"-webkit;id;;;@
o;	;"-o;id;;;@
o;+	;id;,o;	;"-ms;id;;;@
;-;.;@
o;+	;id;,o;	;"-khtml;id;;;@
;-;.;@
o;	;"official;id;;;@
;	[ ;@
;@
o;
;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	[ ;;;@
o;;iw;"transition-delay; [[o;!;"delay-1;@
;""delay_1o;!	;im;"default-transition-delay;@
;""default_transition_delay[o;!;"delay-2;@
;""delay_2o;;F;in;@
[o;!;"delay-3;@
;""delay_3o;;F;io;@
[o;!;"delay-4;@
;""delay_4o;;F;ip;@
[o;!;"delay-5;@
;""delay_5o;;F;iq;@
[o;!;"delay-6;@
;""delay_6o;;F;ir;@
[o;!;"delay-7;@
;""delay_7o;;F;is;@
[o;!;"delay-8;@
;""delay_8o;;F;it;@
[o;!;"delay-9;@
;""delay_9o;;F;iu;@
[o;!;"delay-10;@
;""delay_10o;;F;iv;@
;T;	[u;#¾[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@lineix:
@type:identifier:@options{ ;	ix:@operator:eq:@operand1o:Sass::Script::Funcall
:@keywords{ ;	ix:
@name"type-of:
@args[o:Sass::Script::Variable	;	ix;"delay-1;@	:@underscored_name"delay_1;@	;@	0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	ix;"unquote;[o;	;	ix;"delay-1;@	;"delay_1;@	;	ix;"delay-1:@children[ ;@	:@guarded0o;;o;$
;%{ ;iy;"compact; [o;!	;iy;"delay-1;@
;""delay_1o;!	;iy;"delay-2;@
;""delay_2o;!	;iy;"delay-3;@
;""delay_3o;!	;iy;"delay-4;@
;""delay_4o;!	;iy;"delay-5;@
;""delay_5o;!	;iy;"delay-6;@
;""delay_6o;!	;iy;"delay-7;@
;""delay_7o;!	;iy;"delay-8;@
;""delay_8o;!	;iy;"delay-9;@
;""delay_9o;!	;iy;"delay-10;@
;""delay_10;@
;iy;"delays;	[ ;@
;0o;*;%{ ;i|;"experimental; [o;	;"transition-delay;iz;;;@
o;!	;iz;"delays;@
;""delayso;	;"	-moz;i{;;;@
o;	;"-webkit;i{;;;@
o;	;"-o;i{;;;@
o;+	;i{;,o;	;"-ms;i{;;;@
;-;.;@
o;+	;i{;,o;	;"-khtml;i{;;;@
;-;.;@
o;	;"official;i{;;;@
;	[ ;@
;@
o;
;["*/* Transition all-in-one shorthand */;i;	[ ;;;@
o;;i;"single-transition; [	[o;!;"property;@
;""propertyo;!	;i};" default-transition-property;@
;"" default_transition_property[o;!;"duration;@
;""durationo;!	;i~;" default-transition-duration;@
;"" default_transition_duration[o;!;"function;@
;""functiono;!	;i;" default-transition-function;@
;"" default_transition_function[o;!;"
delay;@
;""
delayo;!	;i;"default-transition-delay;@
;""default_transition_delay;T;	[o;*;%{ ;i;"transition; [o;$
;%{ ;i;"compact; [o;	;[	o;!	;i;"property;@
;""propertyo;!	;i;"duration;@
;""durationo;!	;i;"function;@
;""functiono;!	;i;"
delay;@
;""
delay;i;:
space;@
;@
;	[ ;@
;@
o;;i;"transition; [[o;!;"transition-1;@
;""transition_1o;	;"default;i;;;@
[o;!;"transition-2;@
;""transition_2o;;F;i;@
[o;!;"transition-3;@
;""transition_3o;;F;i;@
[o;!;"transition-4;@
;""transition_4o;;F;i;@
[o;!;"transition-5;@
;""transition_5o;;F;i;@
[o;!;"transition-6;@
;""transition_6o;;F;i;@
[o;!;"transition-7;@
;""transition_7o;;F;i;@
[o;!;"transition-8;@
;""transition_8o;;F;i;@
[o;!;"transition-9;@
;""transition_9o;;F;i;@
[o;!;"transition-10;@
;""transition_10o;;F;i;@
;T;	[u;#î[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"default:
@linei:
@type:identifier:@options{ ;	i:@operator:eq:@operand1o:Sass::Script::Variable	;	i:
@name"transition-1;@	:@underscored_name"transition_1;@	0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
:@keywords{ ;	i;"compact:
@args[o:Sass::Script::List	;[	o;	;	i;" default-transition-property;@	;" default_transition_propertyo;	;	i;" default-transition-duration;@	;" default_transition_durationo;	;	i;" default-transition-function;@	;" default_transition_functiono;	;	i;"default-transition-delay;@	;"default_transition_delay;	i:@separator:
space;@	;@	;	i;"transition-1:@children[ ;@	:@guarded0o;;o;;F;i;@
;i;"transitions;	[ ;@
;0u;#g[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:@value"	list:
@linei:
@type:identifier:@options{ ;	i:@operator:eq:@operand1o:Sass::Script::Funcall
:@keywords{ ;	i:
@name"type-of:
@args[o;
;{ ;	i;"nth;[o:Sass::Script::Variable	;	i;"transition-1;@
:@underscored_name"transition_1o:Sass::Script::Number;i;	i:@denominator_units[ :@original"1;@
:@numerator_units[ ;@
;@
;@
;	i;:and;o; 
;o;	;"	list;	i;
;;@
;	i;;;o;
;{ ;	i;"type-of;[o;	;	i;"transition-1;@
;"transition_1;@
;@
;@
u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
:@keywords{ :
@linei:
@name"compact:
@args[o:Sass::Script::Variable	;	i;
"transition-1:@options{ :@underscored_name"transition_1o;	;	i;
"transition-2;@;"transition_2o;	;	i;
"transition-3;@;"transition_3o;	;	i;
"transition-4;@;"transition_4o;	;	i;
"transition-5;@;"transition_5o;	;	i;
"transition-6;@;"transition_6o;	;	i;
"transition-7;@;"transition_7o;	;	i;
"transition-8;@;"transition_8o;	;	i;
"transition-9;@;"transition_9o;	;	i;
"transition-10;@;"transition_10;@;	i;
"transitions:@children[ ;@:@guarded0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	i;"	join;[o;	;	i;"transition-1;@
;"transition_1o;
;{ ;	i;"compact;[o;	;	i;"transition-2;@
;"transition_2o;	;	i;"transition-3;@
;"transition_3o;	;	i;"transition-4;@
;"transition_4o;	;	i;"transition-5;@
;"transition_5o;	;	i;"transition-6;@
;"transition_6o;	;	i;"transition-7;@
;"transition_7o;	;	i;"transition-8;@
;"transition_8o;	;	i;"transition-9;@
;"transition_9o;	;	i;"transition-10;@
;"transition_10;@
o;	;"
comma;	i;
;;@
;@
;	i;"transitions:@children[ ;@
:@guarded0o;;o;$
;%{ ;i;"comma-list; [ ;@
;i;"delays;	[ ;@
;0o;;o;;F;i;@
;i;"has-delays;	[ ;@
;0o;;o;$
;%{ ;i;"comma-list; [ ;@
;i;"webkit-value;	[ ;@
;0o;;o;$
;%{ ;i;"comma-list; [ ;@
;i;"moz-value;	[ ;@
;0o;;o;$
;%{ ;i;"comma-list; [ ;@
;i;"o-value;	[ ;@
;0o;
;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	[ ;;;@
o:Sass::Tree::EachNode;i¢:	@var"transition:
@listo;!	;i¢;"transitions;@
;""transitions;T;	[o;
;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	[ ;;;@
o;;o;$
;%{ ;i¥;"nth; [o;!	;i¥;"transition;@
;""transitiono;;i;i¥;[ ;"1;@
;[ ;@
;i¥;"property;	[ ;@
;0o;;o;;F;i¦;@
;i¦;"duration;	[ ;@
;0o;;o;;F;i§;@
;i§;"timing-function;	[ ;@
;0o;;o;;F;i¨;@
;i¨;"
delay;	[ ;@
;0u;#
[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:
@linei©:@denominator_units[ :@original"1:@options{ :@numerator_units[ ;	i©:@operator:gt:@operand1o:Sass::Script::Funcall
:@keywords{ ;	i©:
@name"length:
@args[o:Sass::Script::Variable	;	i©;"transition;@
:@underscored_name"transition;@
;@
0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	i©;"nth;[o;	;	i©;"transition;@
;"transitiono;;i;	i©;
@;"2;@
;[ ;@
;	i©;"duration:@children[ ;@
:@guarded0u;#[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:
@lineiª:@denominator_units[ :@original"2:@options{ :@numerator_units[ ;	iª:@operator:gt:@operand1o:Sass::Script::Funcall
:@keywords{ ;	iª:
@name"length:
@args[o:Sass::Script::Variable	;	iª;"transition;@
:@underscored_name"transition;@
;@
0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	iª;"nth;[o;	;	iª;"transition;@
;"transitiono;;i;	iª;
@;"3;@
;[ ;@
;	iª;"timing-function:@children[ ;@
:@guarded0u;#M[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:
@linei«:@denominator_units[ :@original"3:@options{ :@numerator_units[ ;	i«:@operator:gt:@operand1o:Sass::Script::Funcall
:@keywords{ ;	i«:
@name"length:
@args[o:Sass::Script::Variable	;	i«;"transition;@
:@underscored_name"transition;@
;@
0[o:Sass::Tree::VariableNode:
@expro;
;{ ;	i«;"nth;[o;	;	i«;"transition;@
;"transitiono;;i	;	i«;
@;"4;@
;[ ;@
;	i«;"
delay:@children[ ;@
:@guarded0o;;o:Sass::Script::Bool;T;	i«;@
;	i«;"has-delays;[ ;@
;0o;
;[";/* If a delay is provided without a timing function */;i­;	[ ;;;@
u;#^[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:
@linei®:@operando:Sass::Script::Variable	;i®:
@name"
delay:@options{ :@underscored_name"
delay:@operator:not;@
;i®;:and:@operand1o:Sass::Script::Funcall
:@keywords{ ;i®;"is-time:
@args[o;
	;i®;"timing-function;@
;"timing_function;@
;@
0[o:Sass::Tree::VariableNode:
@expro;
	;i®;"timing-function;@
;"timing_function;i®;"
delay:@children[ ;@
:@guarded0o;;o:Sass::Script::Bool:@valueF;i®;@
;i®;"timing-function;[ ;@
;0o;;o;;T;i®;@
;i®;"has-delays;[ ;@
;0o;
;["9/* Keep a list of delays in case one is specified */;i°;	[ ;;;@
o;;o;$
;%{ ;i±;"append; [o;!	;i±;"delays;@
;""delayso;$
;%{ ;i±;"if; [o;!	;i±;"
delay;@
;""
delayo;!	;i±;"
delay;@
;""
delayo;;i ;i±;[ ;"0s;@
;["s;@
;@
;i±;"delays;	[ ;@
;0o;;o;$
;%{ ;i³;"append; [o;!	;i³;"webkit-value;@
;""webkit_valueo;$
;%{ ;i³;"compact; [o;	;[o;$
;%{ ;i³;"prefixed-for-transition; [o;	;"-webkit;i³;;;@
o;!	;i³;"property;@
;""property;@
o;!	;i³;"duration;@
;""durationo;!	;i³;"timing-function;@
;""timing_function;i³;;/;@
;@
;@
;i³;"webkit-value;	[ ;@
;0o;;o;$
;%{ ;i´;"append; [o;!	;i´;"moz-value;@
;""moz_valueo;$
;%{ ;i´;"compact; [o;	;[	o;$
;%{ ;i´;"prefixed-for-transition; [o;	;"	-moz;i´;;;@
o;!	;i´;"property;@
;""property;@
o;!	;i´;"duration;@
;""durationo;!	;i´;"timing-function;@
;""timing_functiono;!	;i´;"
delay;@
;""
delay;i´;;/;@
;@
;@
;i´;"moz-value;	[ ;@
;0o;;o;$
;%{ ;iµ;"append; [o;!	;iµ;"o-value;@
;""o_valueo;$
;%{ ;iµ;"compact; [o;	;[	o;$
;%{ ;iµ;"prefixed-for-transition; [o;	;"-o;iµ;;;@
o;!	;iµ;"property;@
;""property;@
o;!	;iµ;"duration;@
;""durationo;!	;iµ;"timing-function;@
;""timing_functiono;!	;iµ;"
delay;@
;""
delay;iµ;;/;@
;@
;@
;iµ;"o-value;	[ ;@
;0;@
u;#Ý[o:Sass::Script::Variable	:
@linei¸:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:@valueo; 	;i¸;"webkit-value;@;	"webkit_value;i¸;["-webkit-transition:@children[ :@prop_syntax:new;@:
@tabsi o:Sass::Tree::CommentNode
;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;[ :
@type:silent;@u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:
@name"has-delays:@options{ :@underscored_name"has_delays0[o:Sass::Tree::PropNode:@valueo; 	;iº;"delays;@;	"delays;iº;["-webkit-transition-delay:@children[ :@prop_syntax:new;@:
@tabsi u;##[o:Sass::Script::Variable	:
@linei»:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:@valueo; 	;i»;"moz-value;@;	"moz_value;i»;["-moz-transition:@children[ :@prop_syntax:new;@:
@tabsi u;#[o:Sass::Script::Variable	:
@linei¼:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:@valueo; 	;i¼;"o-value;@;	"o_value;i¼;["-o-transition:@children[ :@prop_syntax:new;@:
@tabsi o;&;o;!	;i½;"transitions;@
;""transitions;i½;["transition;	[ ;';(;@
;)i ;@
o;
;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	[ ;;;@
o:Sass::Tree::FunctionNode;iÁ;"comma-list; [[o;!;"	list;@
;""	listo;	;[ ;iÁ;;/;@
;T;	[o:Sass::Tree::ReturnNode	;o;$
;%{ ;iÂ;"	join; [o;	;[ ;iÂ;;/;@
o;!	;iÂ;"	list;@
;""	listo;	;"
comma;iÂ;;;@
;@
;iÂ;	[ ;@
;@
o;
;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	[ ;;;@
o;3;iÆ;"prefixed-for-transition; [[o;!;"prefix;@
;""prefix0[o;!;"property;@
;""property0;T;	[u;#[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"	list:
@lineiÇ:
@type:identifier:@options{ ;	iÇ:@operator:eq:@operand1o:Sass::Script::Funcall
:@keywords{ ;	iÇ:
@name"type-of:
@args[o:Sass::Script::Variable	;	iÇ;"property;@	:@underscored_name"property;@	;@	u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:@keywords{ :
@lineiÎ:
@name"
index:
@args[o:Sass::Script::Variable	;iÎ;"#transitionable-prefixed-values:@options{ :@underscored_name"#transitionable_prefixed_valueso;
	;iÎ;"property;@;"property;@u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@lineiÑ:
@name"property:@options{ :@underscored_name"property;iÑ:@children[ ;
@
[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_beforei;iÏ:@aftero;;0;iÏ;0:@originally_textF:	@mido;
	;iÏ;"property;@;"property;@:@whitespace_after0:@beforeo;;0;iÏ;0;:originally_text;o:Sass::Script::String	:@value"-;iÏ:
@type:identifier;@;@;F;0;F;o;
	;iÏ;"prefix;@;"prefix;@;0;0;iÏ:@children[ ;@[o:Sass::Tree::VariableNode:
@expro;
;{ ;	iÈ;"comma-list;[ ;@	;	iÈ;"new-list:@children[ ;@	:@guarded0o:Sass::Tree::EachNode;	iÉ:	@var"v:
@listo;	;	iÉ;"property;@	;"property:@has_childrenT;[o;;o;
;{ ;	iÊ;"append;[o;	;	iÊ;"new-list;@	;"new_listo;
;{ ;	iÊ;"prefixed-for-transition;[o;	;	iÊ;"prefix;@	;"prefixo;	;	iÊ;"v;@	;"v;@	;@	;	iÊ;"new-list;[ ;@	;0;@	o:Sass::Tree::ReturnNode	;o;	;	iÌ;"new-list;@	;"new_list;	iÌ;[ ;@	;@
o;
;["7/* Checks if the value given is a unit of time. */;iÖ;	[ ;;;@
o;3;i×;"is-time; [[o;!;"
value;@
;""
value0;T;	[u;#ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"number:
@lineiØ:
@type:identifier:@options{ ;	iØ:@operator:eq:@operand1o:Sass::Script::Funcall
:@keywords{ ;	iØ:
@name"type-of:
@args[o:Sass::Script::Variable	;	iØ;"
value;@	:@underscored_name"
value;@	;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:
@lineiÛ:@options{ ;	iÛ:@children[ ;
@	[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;	iÙ:@operando;	;	iÙ;o;
;{ ;	iÙ;"
index;[o:Sass::Script::List	;[o;	;"s;	iÙ;
;;@	o;	;"ms;	iÙ;
;;@	;	iÙ:@separator:
space;@	o;
;{ ;	iÙ;"	unit;[o;	;	iÙ;"
value;@	;"
value;@	;@	;:not;@	;;;@	;	iÙ:@children[ ;@	;@
;@
