/******************************************************************
Site Name: 
Author: 

CSS: Main Stylesheet

Here's where the magic happens. Here, you'll see we are calling in
the separate media queries throughout. Unlike in "Bones theme" where the base mobile goes outside any query
and is called at the beginning, we are engineering our pages to scale back as sizes decrease.  Sorry Andy Clarke, but my thought process is not to work from a base-up.  It is easier to scale back.  Yes, I know the CSS gets redundant and could be optimized, but in my experiments, it saved less than .05 seconds in load time...yet it saves a day or two in development time per client my way.  
******************************************************************/


//
// IMPORTING STYLES
//

// import css3 core, normalize, and the basic functions used throughout 
@import "compass/css3";
@import "foundation-style/normalize";
@import "foundation-style/functions";

//Should you choose to do advanced modular scaling, this is where to insert it
@import "foundation-style/modular-scale";

//basic variables
@import "foundation-style/settings";

//text dependencies before the mixins
@import "foundation-style/typography";

// import mixins 
@import "foundation-style/mixins";

//semantic-grid which uses media queries to load/hide elements
@import "foundation-style/semantic-grid";

/*
BASE (MOBILE) SIZE 
This is the average viewing window. So Desktops, Laptops, and 
in general anyone not viewing on a mobile device. Here's where
you can add resource intensive styles.
*/

// styles in base.scss and the normal grid
@import "foundation-style/base";
@import "foundation-style/grid";

/*fancy stylings from Zurb:)
@import "foundation-style/offcanvas";*/


//final styling elements with dependencies
@import "foundation-style/ui";
@import "foundation-style/tabs";
@import "foundation-style/buttons";
@import "foundation-style/navbar";
@import "foundation-style/forms";

//Custom settings loaded last as a "catch-all"
@import "foundation-style/custom";


/*
RETINA (2x RESOLUTION DEVICES)
This applies to the retina iPhone (4s) and iPad (2,3) along with 
other displays with a 2x resolution. You can also create a media
query for retina AND a certain size if you want. Go Nuts.
*/
@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
       only screen and (min--moz-device-pixel-ratio: 1.5),
       only screen and (min-device-pixel-ratio: 1.5) {
	
	// styles in 2x.scss
	@import "foundation-style/2x"; 

} // end of media query 

/*
PRINT STYLESHEET
Feel free to customize this. Remember to add things that won't make
sense to print at the bottom. Things like nav, ads, and forms should
be set to display none.
*/
@media print { 
	* { 
		background: transparent !important; 
		color: black !important; 
		text-shadow: none !important; 
		filter:none !important; 
		-ms-filter: none !important; 
	} 
	
	a, a:visited { 
		color: #444 !important; 
		text-decoration: underline; 
		
		// show links on printed pages
		&:after { 
			content: " (" attr(href) ")"; 
		}
		
		// show title too
		abbr[title]:after { 
			content: " (" attr(title) ")"; 
		}
	} 
	
	.ir a:after, 
	a[href^="javascript:"]:after, 
	a[href^="#"]:after { 
		content: ""; 
	} 
	
	pre, blockquote { 
		border: 1px solid #999; 
		page-break-inside: avoid; 
	} 
	
	thead { 
		display: table-header-group; 
	} 
	
	tr, img { 
		page-break-inside: avoid; 
	} 
	
	img { 
		max-width: 100% !important; 
	}
    
    @page { 
    	margin: 0.5cm;
    } 
    
    p, h2, h3 { 
    	orphans: 3; 
    	widows: 3; 
    } 
    
    h2, 
    h3 { 
    	page-break-after: avoid; 
    }
    
    // hide content people who print don't need to see
    .sidebar,
    .page-navigation, 
    .wp-prev-next,
    .respond-form,
    nav {
    	display: none;
    }
}